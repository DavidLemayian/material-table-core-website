(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{55:function(e,n,o){"use strict";o.r(n),o.d(n,"frontMatter",(function(){return i})),o.d(n,"metadata",(function(){return c})),o.d(n,"toc",(function(){return s})),o.d(n,"Banner",(function(){return d})),o.d(n,"InfoBannerAboutGlobalVarsInDemos",(function(){return l})),o.d(n,"default",(function(){return m}));var t=o(3),r=o(7),a=(o(0),o(139)),i={id:"components"},c={unversionedId:"demos/components",id:"demos/components",isDocsHomePage:!1,title:"components",description:"return (",source:"@site/docs/demos/components.mdx",slug:"/demos/components",permalink:"/docs/demos/components",editUrl:"https://github.com/material-table-core/website/docs/demos/components.mdx",version:"current"},s=[],d=function(e){var n=e.type,o=e.children;return Object(a.b)("div",{class:"admonition admonition-"+n+" alert alert--"+n},Object(a.b)("div",{class:"admonition-heading"},Object(a.b)("h5",null,Object(a.b)("span",{class:"admonition-icon"},Object(a.b)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(a.b)("path",{"fill-rule":"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),n.toLowerCase())),Object(a.b)("div",{class:"admonition-content"},Object(a.b)("p",null,o)))},l=function(){return Object(a.b)(d,{type:"info",mdxType:"Banner"},"See ",Object(a.b)("a",{href:"/docs/demos/about"},Object(a.b)("b",null,Object(a.b)("i",null,"here")))," for more on the ",Object(a.b)("code",null,"GLOBAL_VARS")," we use in our demos")},b={toc:s,Banner:d,InfoBannerAboutGlobalVarsInDemos:l};function m(e){var n=e.components,o=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(t.a)({},b,o,{components:n,mdxType:"MDXLayout"}))}m.isMDXComponent=!0},65:function(e,n,o){"use strict";o.r(n),o.d(n,"frontMatter",(function(){return c})),o.d(n,"metadata",(function(){return s})),o.d(n,"toc",(function(){return d})),o.d(n,"default",(function(){return b}));var t=o(3),r=o(7),a=(o(0),o(139)),i=(o(265),o(55)),c={id:"toolbar",title:"Override Toolbar"},s={unversionedId:"demos/component-overriding/toolbar",id:"demos/component-overriding/toolbar",isDocsHomePage:!1,title:"Override Toolbar",description:"Usage",source:"@site/docs/demos/component-overriding/toolbar.mdx",slug:"/demos/component-overriding/toolbar",permalink:"/docs/demos/component-overriding/toolbar",editUrl:"https://github.com/material-table-core/website/docs/demos/component-overriding/toolbar.mdx",version:"current",sidebar:"docs",previous:{title:"Basic Actions",permalink:"/docs/demos/actions/basic"},next:{title:"Custom column rendering",permalink:"/docs/demos/features/custom_column_rendering"}},d=[{value:"Usage",id:"usage",children:[]},{value:"Live Demo",id:"live-demo",children:[]}],l={toc:d};function b(e){var n=e.components,o=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(t.a)({},l,o,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"usage"},"Usage"),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-jsx",metastring:"{6}","{6}":!0}),"import MaterialTable, { MTableToolbar } from '@material-table/core';\n\n<MaterialTable\n    // other props\n    components={{\n        Toolbar: props => (\n            <div style={{ backgroundColor: '#e8eaf5' }}>\n                <MTableToolbar {...props} />\n            </div>\n        )\n    }}\n/>\n")),Object(a.b)("h2",{id:"live-demo"},"Live Demo"),Object(a.b)("p",null,"In this demo we override the ",Object(a.b)("inlineCode",{parentName:"p"},"MTableToolbar")," component by injecting the background color into it's props."),Object(a.b)(i.InfoBannerAboutGlobalVarsInDemos,{mdxType:"InfoBannerAboutGlobalVarsInDemos"}),Object(a.b)("pre",null,Object(a.b)("code",Object(t.a)({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),"function ComponentOverriding() {\n  const [bgColor, setBgColor] = useState(RAND_COLOR);\n\n  return (\n    <div>\n      <Button onClick={() => setBgColor(RAND_COLOR)}>\n        Change Background Color\n      </Button>\n\n      <MaterialTable \n        data={DEMO_DATA} \n        columns={DEMO_COLS} \n        icons={TABLE_ICONS}\n        components={{\n          Toolbar: props => {\n            return (\n              <div style={{ backgroundColor: bgColor }}>\n                <MTableToolbar {...props} />\n              </div>\n            )\n          }\n        }} />\n\n    </div> \n  );\n}\n")))}b.isMDXComponent=!0}}]);